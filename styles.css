/* Base Resets & Global Styles */
*, *::before, *::after { box-sizing: border-box; }
* { margin: 0; }

body {
    line-height: 1.5;
    -webkit-font-smoothing: antialiased;
    color: var(--text);
    background-color: var(--bg-col);
    font-family: Roboto, Arial, Helvetica, sans-serif;
}

img, picture, video, canvas, svg {
    display: block;
    max-width: 100%;
}

input, button, textarea, select {
    font: inherit;
}

p, h1, h2, h3, h4, h5, h6 { overflow-wrap: break-word; }
p { text-wrap: pretty; }
h1, h2, h3, h4, h5, h6 { text-wrap: balance; }

#root, #__next { isolation: isolate; }

:root {
    --surface-col: #4a5c6a;
    --card-col: #3b4a58;
    --header-col: #2c3844;
    --bg-col: #1c232b;
    --input-bg: #5c6d7c;
    --true-col: #66dcf6;
    --false-col: #9a6ca3;
    --accent-col: #5f72a6;
    --accent2-col: #66dcf6;
    --text: #f1eee9;
}

.container { display: flex; }

.header {
    padding: 32px 64px;
    display: flex;
    justify-content: space-between;
    align-items: center;
    background-color: var(--header-col);
    width: 100vw;
    height: 100px;
    box-shadow: 2px 2px 10px rgba(0, 0, 0, 0.234);
    position: fixed;
    z-index: 9;
}

.logo {
    color: white;
    display: flex;
    align-items: center;
    gap: 12px;
}

.logo h1 {
    font-size: 24px;
    margin: -10px;
    font-family: Limelight, Arial, Helvetica, sans-serif;
}

.options {
    display: flex;
    align-items: center;
    gap: 16px;
}

.icon { height: 30px; }
span.icon { font-size: 32px; }

.wrapper {
    margin-top: 100px;
    padding: 32px 64px;
    width: 100vw;
    flex: 1;
    gap: 12px;
    display: flex;
    flex-direction: column;
}

.title { font-size: 18px; }

.title-wrap {
    display: flex;
    justify-content: space-between;
    align-items: center;
}

.books {
    display: grid;
    width: 100%;
    gap: 32px;
    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
    justify-items: center;
}

.card {
    position: relative;
    display: grid;
    grid-template-columns: 1fr;
    grid-template-rows: 1fr;
    background-color: var(--card-col);
    width: 200px;
    height: 300px;
    border-radius: 25px;
    box-shadow: 2px 2px 10px rgba(0, 0, 0, 0.234);
    overflow: hidden;
    transition: transform 0.2s ease;
}

.card:hover {
    transform: scale(1.02);
}

.cover {
    grid-area: 1 / 1;
    width: 100%;
    height: 100%;
    object-fit: cover;
    object-position: center;
    transition: filter 1s ease;
    z-index: 1;
}

.card-info {
    grid-area: 1 /1;
    height: 100%;
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    padding: 24px;
    z-index: 2;
    color: white;
}

.hover {
    position: relative;
    opacity: 0;
    visibility: hidden;
    transition: opacity 0.3s ease, visibility 0.3s ease;
}

.card:hover .hover {
    opacity: 1;
    visibility: visible;
}

.card:hover .cover {
    filter: blur(5px) brightness(0.25);
}

.card .top {
    display: flex;
    justify-content: space-between;
    width: 100%;
}

.card a {
    font-weight: 800;
    font-size: 18px;
    text-align: center;
    font-family: Montserrat, serif;
    text-decoration: none;
    color: white;
}

a:hover { color: var(--accent2-col); }

.action {
    color: white;
    user-select: none;
    cursor: pointer;
}

.action:hover { color: var(--accent2-col); }

.icon.action {
    transition: filter 0.2s ease;
}

.icon.action:hover {
    filter: brightness(1.4) sepia(0.2) hue-rotate(15deg) saturate(120%);
}

.read-status {
    position: absolute;
    top: 10px;
    right: 10px;
    font-size: 0.7rem;
    font-weight: 600;
    padding: 2px 8px;
    border-radius: 12px;
    background-color: rgba(0, 0, 0, 0.3);
    color: rgba(255, 255, 255, 0.7);
    z-index: 5;
    cursor: pointer;
    transition: all 0.3s ease;
    text-shadow: 0 1px 2px rgba(0, 0, 0, 0.6);
}

.card.read .read-status {
    background-color: rgba(0, 255, 8, 0.5);
    color: white;
}

.info {
    font-weight: 500;
    align-self: end;
    text-align: end;
    grid-column: 1 / 2;
    grid-row: 2;
}

/* POPUP DIALOG STYLES */
.dialog-container {
    border: none;
    border-radius: 25px;
    padding: 32px;
    width: 400px;
    max-width: 90vw;
    background-color: var(--surface-col);
    color: var(--text);
    box-shadow: 0 20px 40px rgba(0, 0, 0, 0.5);
    position: relative;
    margin: auto;
}

.dialog-container::backdrop {
    background: rgba(0, 0, 0, 0.6);
}

.dialog-content {
    display: flex;
    flex-direction: column;
    gap: 20px;
}

.close-button {
    align-self: flex-end;
    background: none;
    border: none;
    color: var(--text);
    font-size: 20px;
    cursor: pointer;
    padding: 4px 8px;
    margin-bottom: -8px;
    margin-top: -8px;
    border-radius: 50%;
    transition: background-color 0.2s ease;
}

.close-button:hover {
    background-color: rgba(255, 255, 255, 0.1);
}

form {
    display: flex;
    flex-direction: column;
    gap: 12px;
}

form div {
    display: flex;
    flex-direction: column;
    gap: 6px;
}

form input {
    outline: none;
    padding: 10px 14px;
    width: 100%;
    font-size: 14px;
    border-radius: 12px;
    font-family: inherit;
    background-color: var(--input-bg);
    color: var(--text);
    border: 1px solid rgba(255, 255, 255, 0.1);
    box-shadow: inset 0 1px 2px rgba(0, 0, 0, 0.2);
    transition: border 0.2s ease, box-shadow 0.2s ease;
}

form input::placeholder {
    color: rgba(241, 238, 233, 0.6);
}

form input:focus {
    border: 1px solid var(--accent-col);
    box-shadow: 0 0 0 2px rgba(95, 114, 166, 0.4);
}

form input:valid {
    border: 1px solid var(--true-col);
}

form input:invalid:not(:placeholder-shown) {
    border: 1px solid var(--false-col);
}

form button {
    padding: 8px 20px;
    font-size: 16px;
    color: var(--text);
    background-color: var(--accent-col);
    border: none;
    border-radius: 25px;
    cursor: pointer;
    align-self: center;
    width: auto;
    transition: background-color 0.2s ease;
}

form button:hover {
    background-color: var(--accent2-col);
}

form button:active {
    background-color: var(--accent-col);
}

.open-dialog-button {
    font-size: 18px;
    padding: 8px 20px;
    background-color: var(--accent-col);
    color: var(--text);
    border: none;
    border-radius: 50px;
    cursor: pointer;
    transition: background-color 0.2s ease-in-out;
}

.open-dialog-button:hover {
    background-color: var(--accent2-col);
}

/* === Read Toggle Switch (Form Style) === */
.read-toggle-wrapper {
    display: flex;
    flex-direction: column;
    gap: 6px;
    margin-top: 8px;
}

.read-toggle-wrapper label {
    font-size: 14px;
    font-weight: 500;
    color: var(--text);
}

.read-checkbox {
    display: flex;
    align-items: center;
    gap: 10px;
    cursor: pointer;
    font-weight: 600;
    color: var(--text);
}

.read-checkbox input {
    display: none;
}

.read-checkbox .checkmark {
    position: relative;
    width: 40px;
    height: 22px;
    background-color: #e5e5e5;
    border-radius: 50px;
    transition: background-color 0.2s ease-in-out;
    box-shadow: inset 0 3px 10px rgba(0, 0, 0, 0.15);
}

.read-checkbox .checkmark::before {
    content: "";
    position: absolute;
    height: 18px;
    width: 18px;
    left: 2px;
    top: 2px;
    background: linear-gradient(white, #f2f2f2);
    border-radius: 50%;
    transition: transform 0.2s ease-out;
    box-shadow: 0 8px 6px -4px rgba(0, 0, 0, 0.1);
}

.read-checkbox input:checked + .checkmark {
    background-color: #47CB8F;
}

.read-checkbox input:checked + .checkmark::before {
    transform: translateX(18px);
}

  